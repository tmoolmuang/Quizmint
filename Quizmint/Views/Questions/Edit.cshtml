@model Quizmint.Models.Question

@{
    ViewBag.Title = "Edit";
}

<h4>Edit Question</h4>

<div class="container">
    <div class="row">
        <div class="col-6">

            @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ProjectId)
            @Html.HiddenFor(model => model.QuestionTypeId)
            @Html.HiddenFor(model => model.NumberOfChoice)

            <div class="form-group">
                @Html.LabelFor(model => model.QuestionType.Name, new { @class = "control-label col-md-3" })
                <span>:&nbsp;</span>
                @Html.DisplayFor(a => a.QuestionType.Name)
            </div>

            @*<div id="multiple" style="display:@((Model.QuestionTypeId == 1)? "block" : "none")">
                <div class="form-group">
                    @Html.LabelFor(model => model.NumberOfChoice, new { @class = "control-label col-md-3" })
                    <span>:&nbsp;</span>
                    @Html.DisplayFor(a => a.NumberOfChoice)
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.QuestionText, new { @class = "control-label col-md-3" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.QuestionText, new { @class = "form-control", @rows = 3 })
                    @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="truefalse" style="display:@((Model.QuestionTypeId == 2)? "block" : "none")">
                <div class="form-group">
                    @Html.LabelFor(model => model.IsTrue, new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsTrue, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IsTrue, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-sm btn-primary" />
                    @Html.ActionLink("Cancel", "Index", "Questions", new { id = Model.ProjectId }, new { @class = "btn btn-sm btn-primary" })
                    @if (Model.QuestionTypeId == 1)
            {
                @Html.ActionLink("Edit answer choice", "Index", "Answers", new { id = Model.Id }, new { @class = "btn btn-sm btn-primary" })
    }
                </div>
            </div>
        </div>
}

        </div>
        @if (Model.QuestionTypeId == 1)
        { 
        <div class="col-6 border rounded">
            <div id="answer_choice"></div>
        </div>
        }
        else
        {
            <div class="col-6"></div>
        }
    </div>
</div>

<script>
    $(document).ready(function () {
        $.ajax({
            type: "GET",
            url: "/Answers/_index",
            data: {id: @Model.Id},
            success: function (data) {
                $('#answer_choice').html(data);
            },
            error: function () {
                alert("Something is wrong!");
            }
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
